import React, { useEffect, useState } from "react";
import { useParams, useLocation } from "react-router-dom";
import { Container, Row, Col, Button, Card, InputGroup, FormControl } from "react-bootstrap";

function ProductDetail() {
  const { id } = useParams();
  const location = useLocation();
  const [product, setProduct] = useState(location.state?.product || null);
  const [quantity, setQuantity] = useState(1);

  // N·∫øu kh√¥ng c√≥ product trong state, g·ªçi API ƒë·ªÉ l·∫•y d·ªØ li·ªáu
  useEffect(() => {
    if (!product) {
      fetch(`http://localhost:3000/Products/${id}`)
        .then((response) => response.json())
        .then((data) => setProduct(data))
        .catch((error) => console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", error));
    }
  }, [id, product]);

  // X·ª≠ l√Ω tƒÉng/gi·∫£m s·ªë l∆∞·ª£ng
  const increaseQuantity = () => setQuantity((prev) => prev + 1);
  const decreaseQuantity = () => setQuantity((prev) => (prev > 1 ? prev - 1 : 1));

  // X·ª≠ l√Ω th√™m v√†o gi·ªè h√†ng
  const addToCart = () => {
    if (!product) return;

    const cart = JSON.parse(localStorage.getItem("cart")) || [];

    // Ki·ªÉm tra xem s·∫£n ph·∫©m ƒë√£ c√≥ trong gi·ªè ch∆∞a
    const existingProductIndex = cart.findIndex((item) => item.id === product.product_id);

    if (existingProductIndex !== -1) {
      // N·∫øu s·∫£n ph·∫©m ƒë√£ c√≥, c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
      cart[existingProductIndex].quantity += quantity;
    } else {
      // N·∫øu ch∆∞a c√≥, th√™m m·ªõi v√†o gi·ªè h√†ng
      cart.push({ ...product, quantity });
    }

    // L∆∞u l·∫°i v√†o localStorage
    localStorage.setItem("cart", JSON.stringify(cart));

    alert("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng!");
  };

  return (
    <Container className="mt-5">
      {product ? (
        <Row>
          <Col md={6}>
            <Card>
              <Card.Img variant="top" src={product.image_url} alt={product.product_name} />
            </Card>
          </Col>
          <Col md={6}>
            <h2>{product.product_name}</h2>
            <p className="product-price">{product.price.toLocaleString()} VND</p>
            <p>{product.description}</p>

            {/* B·ªô ƒëi·ªÅu ch·ªânh s·ªë l∆∞·ª£ng */}
            <InputGroup className="mb-3" style={{ width: "150px" }}>
              <Button variant="outline-dark" onClick={decreaseQuantity}>-</Button>
              <FormControl className="text-center" value={quantity} readOnly />
              <Button variant="outline-dark" onClick={increaseQuantity}>+</Button>
            </InputGroup>

            {/* N√∫t th√™m v√†o gi·ªè h√†ng */}
            <Button variant="dark" onClick={addToCart}>üõí Th√™m v√†o gi·ªè h√†ng</Button>
          </Col>
        </Row>
      ) : (
        <p className="text-center">ƒêang t·∫£i s·∫£n ph·∫©m...</p>
      )}
    </Container>
  );
}

export default ProductDetail;
