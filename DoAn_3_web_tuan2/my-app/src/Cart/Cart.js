import React, { useEffect, useState } from "react";
import { Container, Row, Col, Button, Table, Image, Form } from "react-bootstrap";
import { useNavigate } from "react-router-dom";

function Cart() {
  const navigate = useNavigate();
  const [cartItems, setCartItems] = useState([]);
  const [selectedItems, setSelectedItems] = useState([]);

  // Load gi·ªè h√†ng t·ª´ localStorage
  useEffect(() => {
    const storedCart = JSON.parse(localStorage.getItem("cart")) || [];
    setCartItems(storedCart);
  }, []);

  // H√†m c·∫≠p nh·∫≠t gi·ªè h√†ng v√†o localStorage
  const updateCartInLocalStorage = (updatedCart) => {
    localStorage.setItem("cart", JSON.stringify(updatedCart));
    setCartItems(updatedCart);
  };

  // X·ª≠ l√Ω tƒÉng/gi·∫£m s·ªë l∆∞·ª£ng
  const handleQuantityChange = (id, amount) => {
    const updatedCart = cartItems.map((item) =>
      item.product_id === id ? { ...item, quantity: Math.max(1, item.quantity + amount) } : item
    );
    updateCartInLocalStorage(updatedCart);
  };

  // X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
  const handleRemove = (id) => {
    const updatedCart = cartItems.filter((item) => item.product_id !== id);
    updateCartInLocalStorage(updatedCart);
    setSelectedItems(selectedItems.filter((itemId) => itemId !== id));
  };

  // X·ª≠ l√Ω ch·ªçn s·∫£n ph·∫©m mu·ªën thanh to√°n
  const handleSelectItem = (id) => {
    setSelectedItems((prev) =>
      prev.includes(id) ? prev.filter((itemId) => itemId !== id) : [...prev, id]
    );
  };

  // T√≠nh t·ªïng ti·ªÅn c·ªßa c√°c s·∫£n ph·∫©m ƒë∆∞·ª£c ch·ªçn
  const totalPrice = cartItems
    .filter((item) => selectedItems.includes(item.product_id))
    .reduce((acc, item) => acc + item.price * item.quantity, 0);

  // X·ª≠ l√Ω thanh to√°n
  const handleCheckout = () => {
    const selectedProducts = cartItems.filter((item) => selectedItems.includes(item.product_id));
    localStorage.setItem("selectedCheckoutItems", JSON.stringify(selectedProducts));
    navigate("/Payment");
  };

  return (
    <Container className="mt-5 cart-page">
      <h4>üõí GI·ªé H√ÄNG C·ª¶A B·∫†N</h4>
      <Row className="mt-4">
        {/* Danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng */}
        <Col lg={9} md={12}>
          {cartItems.length > 0 ? (
            <Table bordered hover>
              <thead>
                <tr>
                  <th>Ch·ªçn</th>
                  <th>·∫¢nh</th>
                  <th>S·∫£n ph·∫©m</th>
                  <th>Gi√°</th>
                  <th>S·ªë l∆∞·ª£ng</th>
                  <th>T·ªïng</th>
                  <th>H√†nh ƒë·ªông</th>
                </tr>
              </thead>
              <tbody>
                {cartItems.map((item) => (
                  <tr key={item.product_id}>
                    <td>
                      <Form.Check
                        type="checkbox"
                        checked={selectedItems.includes(item.product_id)}
                        onChange={() => handleSelectItem(item.product_id)}
                      />
                    </td>
                    <td>
                      <Image src={item.image_url} alt={item.product_name} width={70} />
                    </td>
                    <td>{item.product_name}</td>
                    <td>{item.price.toLocaleString()} VND</td>
                    <td>
                      <Button variant="outline-secondary" size="sm" onClick={() => handleQuantityChange(item.product_id, -1)}>-</Button>
                      <span className="mx-2">{item.quantity}</span>
                      <Button variant="outline-secondary" size="sm" onClick={() => handleQuantityChange(item.product_id, 1)}>+</Button>
                    </td>
                    <td>{(item.price * item.quantity).toLocaleString()} VND</td>
                    <td>
                      <Button variant="danger" size="sm" onClick={() => handleRemove(item.product_id)}>X√≥a</Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </Table>
          ) : (
            <p className="text-center">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>
          )}
        </Col>

        {/* T·ªïng ti·ªÅn v√† Thanh to√°n */}
        <Col lg={3} md={12} className="cart-summary">
          <div className="summary-box p-3 shadow-sm">
            <h5 className="text-center">T·ªïng c·ªông</h5>
            <p className="text-center fw-bold">{totalPrice.toLocaleString()} VND</p>
            <Button
              variant="dark"
              className="w-100"
              onClick={handleCheckout}
              disabled={selectedItems.length === 0}
            >
              Thanh to√°n
            </Button>
          </div>
        </Col>
      </Row>
    </Container>
  );
}

export default Cart;
